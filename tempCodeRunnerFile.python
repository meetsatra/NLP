words = preprocessed_data.split()
# for i in range(len(words) - 1):
#     bigram_table[words[i]][words[i + 1]] += 1

# # Step 3: Calculate the probability of given sentences
# def calculate_sentence_probability(sentence, bigram_table):
#     words = sentence.split()
#     probability = 1.0
#     for i in range(len(words) - 1):
#         current_word = words[i]
#         next_word = words[i + 1]
#         bigram_count = bigram_table[current_word][next_word]
#         unigram_count = sum(bigram_table[current_word].values())
#         if unigram_count > 0:
#             probability *= bigram_count / unigram_count
#         else:
#             probability = 0.0  # To handle cases where the unigram is not in the bigram table
#             break
#     return probability

# sentences_to_calculate = [
#     "You read a book(eos)",
#     "book a study flight(eos)",
#     "I study(eos)",
#     "I study flight(eos)"
# ]

# for sentence in sentences_to_calculate:
#     probability = calculate_sentence_probability(sentence, bigram_table)
#     print(f"Probability of '{sentence}': {probability:.4f}")
